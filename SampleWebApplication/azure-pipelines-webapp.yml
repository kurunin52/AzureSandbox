# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger: none
pr: none

pool:
  vmImage: 'windows-latest'
variables:
  solution: 'SampleWebApplication/SampleWebApplication.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
resources:
  pipelines:
    - pipeline: CodeQL_Cached
      source: AzureSandbox_InitCodeQL

stages:
- stage: builder
  jobs: 
  - job: buildApp
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)" /p:WarningLevel=0'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*test*.dll
          !**\*TestAdapter.dll
          !**\obj\**
        searchFolder: '$(System.DefaultWorkingDirectory)'
        testRunTitle: 'simpleTest'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'NUnit'
        testResultsFiles: '**/TEST-*.xml'
        testRunTitle: 'simpleTest'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'custom'
        custom: 'tool'
        arguments: 'install --global security-scan'
    - task: CmdLine@2
      inputs:
        script: 'security-scan $(solution) --export=$(Pipeline.Workspace)\result.sarif'
    - task: PublishPipelineArtifact@1
      displayName: PublishApp
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/SampleWebApplication.zip'
        artifact: 'app'
        publishLocation: 'pipeline'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Pipeline.Workspace)/result.sarif'
        ArtifactName: 'CodeAnalysisLogs'
        publishLocation: 'Container'

# - stage: validation
#   dependsOn: builder
#   jobs:
#   - deployment: DeployApp
#     environment: 'SampleWebApplication'

# - stage: stageB
#   dependsOn: validation
#   jobs: 
#   - job: deployApp
#     steps:
#     - task: DownloadPipelineArtifact@2
#       inputs:
#         buildType: 'current'
#         artifactName: 'app'
#         targetPath: '$(Pipeline.Workspace)'
#     - task: AzureRmWebAppDeployment@4
#       inputs:
#         ConnectionType: 'AzureRM'
#         azureSubscription: 'testConnection'
#         appType: 'webApp'
#         WebAppName: 'kurunin52SampleWebApp'
#         packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
